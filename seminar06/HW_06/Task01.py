# Бинарный поиск
# ● Контекст
# Предположим, что мы хотим найти элемент в массиве (получить 
# его индекс). Мы можем это сделать просто перебрав все элементы. 
# Но что, если массив уже отсортирован? В этом случае можно 
# использовать бинарный поиск. Принцип прост: сначала берём 
# элемент находящийся посередине и сравниваем с тем, который мы 
# хотим найти. Если центральный элемент больше нашего, 
# рассматриваем массив слева от центрального, а если больше - 
# справа и повторяем так до тех пор, пока не найдем наш элемент.
# ● Ваша задача
# Написать программу на любом языке в любой парадигме для 
# бинарного поиска. На вход подаётся целочисленный массив и 
# число. На выходе - индекс элемента или -1, в случае если искомого 
# элемента нет в массиве.

def bin_search(num, m_arr):
    start = 0
    len_arr = len(m_arr) - 1

    while start <= len_arr:
        middle = (start + len_arr) // 2
        if num == m_arr[middle]:
            return f'\nЧисло есть в массиве, индекс - {middle}\n'
        elif num < m_arr[middle]:
            len_arr = middle - 1
        else: 
            start = middle + 1
    else:
        return "Такого числа нет в массиве"
    
numb = int(input('\nВведите целое число для поиска: '))
# print(numb)
arr = [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
print(bin_search(numb, arr))